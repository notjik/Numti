# Реализация формы, сгенерированная на основе чтения файла пользовательского интерфейса 'design.ui'
#
# Создано: Генератор пользовательского кода PyQt5 5.15.5
#
# ПРЕДУПРЕЖДЕНИЕ: Любые изменения, внесенные в этот файл вручную, будут потеряны при повторном запуске pyuic5.
# Не редактируйте этот файл, если вы не знаете, что делаете.
# P.s А я знаю)

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# P.s And I know)


"""Импортирование библиотек (Importing libraries)"""
import json
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    """Создание класса дизайна главного окна (Creating a Main window design class)"""

    def setupUi(self, MainWindow):
        """Настройка пользовательского интерфейса (Customizing the User interface)"""
        with open("data/numti.cfg", "r") as file:
            self.config = json.load(file)
        MainWindow.setObjectName("MainWindow")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("dsgn/numti_logx.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setInputMethodHints(QtCore.Qt.ImhNone)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # Настройка режима с шапкой окна (Setting up the window header mode)
        if self.config['nh']:
            MainWindow.resize(800, 590)
            MainWindow.setMinimumSize(QtCore.QSize(800, 590))
            MainWindow.setMaximumSize(QtCore.QSize(800, 590))
            MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
            self.header = QtWidgets.QWidget(self.centralwidget)
            self.header.setGeometry(QtCore.QRect(0, 0, 800, 30))
            self.header.setObjectName("header")
            self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
            self.horizontalLayoutWidget.setGeometry(QtCore.QRect(680, 0, 111, 26))
            self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
            self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
            self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
            self.horizontalLayout_2.setObjectName("horizontalLayout_2")
            self.seemenu = QtWidgets.QPushButton(self.horizontalLayoutWidget)
            self.seemenu.setMaximumSize(QtCore.QSize(16777215, 19))
            self.seemenu.setText("")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap(f"dsgn/eye-{self.config['theme']}.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.seemenu.setIcon(icon1)
            self.seemenu.setObjectName("seemenu")
            self.horizontalLayout_2.addWidget(self.seemenu)
            self.roll = QtWidgets.QPushButton(self.horizontalLayoutWidget)
            self.roll.setMaximumSize(QtCore.QSize(16777215, 19))
            self.roll.setText("")
            icon2 = QtGui.QIcon()
            icon2.addPixmap(QtGui.QPixmap(f"dsgn/minus-{self.config['theme']}.ico"), QtGui.QIcon.Normal,
                            QtGui.QIcon.Off)
            self.roll.setIcon(icon2)
            self.roll.setObjectName("roll")
            self.horizontalLayout_2.addWidget(self.roll)
            self.closed = QtWidgets.QPushButton(self.horizontalLayoutWidget)
            self.closed.setEnabled(True)
            self.closed.setMaximumSize(QtCore.QSize(16777215, 19))
            self.closed.setText("")
            icon3 = QtGui.QIcon()
            icon3.addPixmap(QtGui.QPixmap(f"dsgn/close-{self.config['theme']}.ico"), QtGui.QIcon.Normal,
                            QtGui.QIcon.Off)
            self.closed.setIcon(icon3)
            self.closed.setObjectName("closed")
            self.horizontalLayout_2.addWidget(self.closed)
        else:
            MainWindow.resize(800, 610)
            MainWindow.setMinimumSize(QtCore.QSize(800, 610))
            MainWindow.setMaximumSize(QtCore.QSize(800, 610))
            MainWindow.setCentralWidget(self.centralwidget)
        self.verticalWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget.setGeometry(QtCore.QRect(9, 29, 391, 41))
        self.verticalWidget.setObjectName("verticalWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.comboBox = QtWidgets.QComboBox(self.verticalWidget)
        self.comboBox.setEnabled(True)
        self.comboBox.setToolTip("")
        self.comboBox.setToolTipDuration(0)
        self.comboBox.setProperty("placeholderText", "")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout.addWidget(self.comboBox)
        self.horizontalWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalWidget.setGeometry(QtCore.QRect(409, 29, 381, 41))
        self.horizontalWidget.setObjectName("horizontalWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalWidget)
        self.label.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label.setFont(font)
        self.label.setText("")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.toolButton = QtWidgets.QToolButton(self.horizontalWidget)
        self.toolButton.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.toolButton.setFont(font)
        self.toolButton.setToolTip("")
        self.toolButton.setToolTipDuration(-1)
        self.toolButton.setObjectName("toolButton")
        self.horizontalLayout.addWidget(self.toolButton)
        self.verticalWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget_2.setGeometry(QtCore.QRect(10, 80, 782, 81))
        self.verticalWidget_2.setObjectName("verticalWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalWidget_2)
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.widget = QtWidgets.QWidget(self.verticalWidget_2)
        self.widget.setObjectName("widget")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setGeometry(QtCore.QRect(2, 1, 778, 16))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.lineEdit.setMouseTracking(False)
        self.lineEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.lineEdit.setToolTip("")
        self.lineEdit.setToolTipDuration(-1)
        self.lineEdit.setAutoFillBackground(False)
        self.lineEdit.setInputMethodHints(QtCore.Qt.ImhHiddenText)
        self.lineEdit.setInputMask("")
        self.lineEdit.setText("")
        self.lineEdit.setFrame(True)
        self.lineEdit.setDragEnabled(True)
        self.lineEdit.setReadOnly(False)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_2.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.verticalWidget_2)
        self.widget_2.setObjectName("widget_2")
        self.pushButton = QtWidgets.QPushButton(self.widget_2)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(2, 0, 778, 16))
        self.pushButton.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButton.setFont(font)
        self.pushButton.setMouseTracking(False)
        self.pushButton.setTabletTracking(False)
        self.pushButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton.setAcceptDrops(False)
        self.pushButton.setToolTip("")
        self.pushButton.setToolTipDuration(-1)
        self.pushButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setInputMethodHints(QtCore.Qt.ImhNone)
        self.pushButton.setAutoDefault(False)
        self.pushButton.setDefault(False)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton1 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton1.setEnabled(True)
        self.pushButton1.setGeometry(QtCore.QRect(2, 0, 258, 16))
        self.pushButton1.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButton1.setFont(font)
        self.pushButton1.setMouseTracking(False)
        self.pushButton1.setTabletTracking(False)
        self.pushButton1.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton1.setAcceptDrops(False)
        self.pushButton1.setToolTip("")
        self.pushButton1.setToolTipDuration(-1)
        self.pushButton1.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton1.setAutoFillBackground(False)
        self.pushButton1.setInputMethodHints(QtCore.Qt.ImhNone)
        self.pushButton1.setAutoDefault(False)
        self.pushButton1.setDefault(False)
        self.pushButton1.setFlat(False)
        self.pushButton1.setObjectName("pushButton1")
        self.pushButton2 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton2.setEnabled(True)
        self.pushButton2.setGeometry(QtCore.QRect(262, 0, 258, 16))
        self.pushButton2.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButton2.setFont(font)
        self.pushButton2.setMouseTracking(False)
        self.pushButton2.setTabletTracking(False)
        self.pushButton2.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton2.setAcceptDrops(False)
        self.pushButton2.setToolTip("")
        self.pushButton2.setToolTipDuration(-1)
        self.pushButton2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton2.setAutoFillBackground(False)
        self.pushButton2.setInputMethodHints(QtCore.Qt.ImhNone)
        self.pushButton2.setAutoDefault(False)
        self.pushButton2.setDefault(False)
        self.pushButton2.setFlat(False)
        self.pushButton2.setObjectName("pushButton2")
        self.pushButton3 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton3.setEnabled(True)
        self.pushButton3.setGeometry(QtCore.QRect(522, 0, 258, 16))
        self.pushButton3.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButton3.setFont(font)
        self.pushButton3.setMouseTracking(False)
        self.pushButton3.setTabletTracking(False)
        self.pushButton3.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton3.setAcceptDrops(False)
        self.pushButton3.setToolTip("")
        self.pushButton3.setToolTipDuration(-1)
        self.pushButton3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton3.setAutoFillBackground(False)
        self.pushButton3.setInputMethodHints(QtCore.Qt.ImhNone)
        self.pushButton3.setAutoDefault(False)
        self.pushButton3.setDefault(False)
        self.pushButton3.setFlat(False)
        self.pushButton3.setObjectName("pushButton3")
        self.verticalLayout_2.addWidget(self.widget_2)
        self.verticalWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget_3.setGeometry(QtCore.QRect(9, 169, 782, 411))
        self.verticalWidget_3.setObjectName("verticalWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.verticalWidget_3)
        self.plainTextEdit.setGeometry(QtCore.QRect(9, 9, 765, 393))
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout_3.addWidget(self.plainTextEdit)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setEnabled(True)
        self.tableWidget.setGeometry(QtCore.QRect(18, 178, 765, 393))
        self.tableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tableWidget.setLineWidth(0)
        self.tableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(187)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setMinimumSectionSize(28)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setAutoFillBackground(False)
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(True)
        self.menubar.setObjectName("menubar")
        self.Info = QtWidgets.QMenu(self.menubar)
        self.Info.setTearOffEnabled(False)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(f"dsgn/questionmark-{self.config['theme']}.ico"), QtGui.QIcon.Normal,
                        QtGui.QIcon.Off)
        self.Info.setIcon(icon4)
        self.Info.setObjectName("Info")
        self.Settings = QtWidgets.QMenu(self.menubar)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(f"dsgn/settings-{self.config['theme']}.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Settings.setIcon(icon5)
        self.Settings.setObjectName("Settings")
        # Настройка тем приложения (Setting up Application Themes)
        if self.config['theme'] == 'dark':
            MainWindow.setStyleSheet("background-color: #C9C8D4")
            self.centralwidget.setStyleSheet("background-color: #1F1E25; color: #FFFFFF")
            self.verticalWidget.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.comboBox.setStyleSheet(
                """background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737;""")
            self.horizontalWidget.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.label.setStyleSheet("background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.toolButton.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.verticalWidget_2.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.widget.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.lineEdit.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.widget_2.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.pushButton.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.pushButton1.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.pushButton2.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.pushButton3.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.verticalWidget_3.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5;")
            self.plainTextEdit.setStyleSheet(
                "background-color: #C9C8D4; border-style: solid; border-radius: 5; color: #373737")
            self.tableWidget.setStyleSheet("background-color: #C9C8D4; "
                                           "border-style: solid; border-radius: 5; color: #373737")
            self.menubar.setStyleSheet("background-color: #26252a; color: #FFFFFF;")
            self.Info.setStyleSheet("background-color: #26252a; border-style: solid; border-radius: 5; color: #ffffff")
            self.Settings.setStyleSheet(
                "background-color: #26252a; border-style: solid; border-radius: 5; color: #ffffff")
        elif self.config['theme'] == 'light':
            MainWindow.setStyleSheet("background-color: #DEDEDE")
            self.centralwidget.setStyleSheet("background-color: #adadad; color: #000000")
            self.verticalWidget.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.comboBox.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.horizontalWidget.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.label.setStyleSheet("background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.toolButton.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.verticalWidget_2.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.widget.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.lineEdit.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.widget_2.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.pushButton.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.pushButton1.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.pushButton2.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.pushButton3.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.verticalWidget_3.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5;")
            self.plainTextEdit.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.tableWidget.setStyleSheet(
                "background-color: #DEDEDE; border-style: solid; border-radius: 5; color: #000000")
            self.menubar.setStyleSheet("background-color: #bdbdbd; color: #000000;")
            self.Info.setStyleSheet("background-color: #bdbdbd; border-style: solid; border-radius: 5; color: #000000")
            self.Settings.setStyleSheet(
                "background-color: #bdbdbd; border-style: solid; border-radius: 5; color: #000000")
        # Настройка менюбара (Configuring the menubar)
        self.Language = QtWidgets.QMenu(self.Settings)
        self.Language.setTearOffEnabled(False)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(f"dsgn/language-{self.config['theme']}.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Language.setIcon(icon6)
        self.Language.setObjectName("Language")
        self.Theme = QtWidgets.QMenu(self.Settings)
        self.Theme.setTearOffEnabled(False)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(f"dsgn/theme-{self.config['theme']}.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Theme.setIcon(icon7)
        self.Theme.setObjectName("Theme")
        MainWindow.setMenuBar(self.menubar)
        self.actionAbout_programm = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(f"dsgn/information-button-{self.config['theme']}.ico"), QtGui.QIcon.Normal,
                        QtGui.QIcon.Off)
        self.actionAbout_programm.setIcon(icon8)
        self.actionAbout_programm.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionAbout_programm.setAutoRepeat(True)
        self.actionAbout_programm.setVisible(True)
        self.actionAbout_programm.setIconVisibleInMenu(True)
        self.actionAbout_programm.setShortcutVisibleInContextMenu(False)
        self.actionAbout_programm.setObjectName("actionAbout_programm")
        self.actionHow_to_use_the_program = QtWidgets.QAction(MainWindow)
        self.actionHow_to_use_the_program.setEnabled(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(f"dsgn/question-{self.config['theme']}.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHow_to_use_the_program.setIcon(icon9)
        self.actionHow_to_use_the_program.setIconVisibleInMenu(True)
        self.actionHow_to_use_the_program.setObjectName("actionHow_to_use_the_program")
        self.Translating = QtWidgets.QAction(MainWindow)
        self.Translating.setCheckable(True)
        if self.config['translating']:
            self.Translating.setChecked(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(f"dsgn/translate-{self.config['theme']}.ico"), QtGui.QIcon.Normal,
                         QtGui.QIcon.Off)
        self.Translating.setIcon(icon10)
        self.Translating.setObjectName("Translating")
        self.Russian = QtWidgets.QAction(MainWindow)
        self.Russian.setCheckable(True)
        if self.config['language'] == 'ru':
            self.Russian.setChecked(True)
        self.Russian.setObjectName("Russian")
        self.English = QtWidgets.QAction(MainWindow)
        self.English.setCheckable(True)
        if self.config['language'] == 'en':
            self.English.setChecked(True)
        self.English.setObjectName("English")
        self.Light = QtWidgets.QAction(MainWindow)
        self.Light.setCheckable(True)
        if self.config['theme'] == 'light':
            self.Light.setChecked(True)
        self.Light.setObjectName("Light")
        self.Dark = QtWidgets.QAction(MainWindow)
        self.Dark.setCheckable(True)
        if self.config['theme'] == 'dark':
            self.Dark.setChecked(True)
        self.Dark.setObjectName("Dark")
        self.Info.addAction(self.actionHow_to_use_the_program)
        self.Info.addAction(self.actionAbout_programm)
        self.Language.addAction(self.Russian)
        self.Language.addAction(self.English)
        self.Theme.addAction(self.Light)
        self.Theme.addAction(self.Dark)
        self.Settings.addAction(self.Theme.menuAction())
        self.Settings.addAction(self.Language.menuAction())
        self.Settings.addAction(self.Translating)
        self.menubar.addAction(self.Info.menuAction())
        self.menubar.addAction(self.Settings.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        """Настройка локализации (Localization Settings)"""
        if self.config['language'] == 'ru':
            _translate = QtCore.QCoreApplication.translate
            # MainWindow.setWindowTitle(_translate("MainWindow", f"Numti v{self.config['version']}"))
            self.comboBox.setItemText(0, _translate("MainWindow", "Мои контакты"))
            self.comboBox.setItemText(1, _translate("MainWindow", "Изменить список контактов"))
            self.comboBox.setItemText(2, _translate("MainWindow", "Поиск по одному номеру"))
            self.comboBox.setItemText(3, _translate("MainWindow", "Поиск из текствого документа (.txt)"))
            self.toolButton.setText(_translate("MainWindow", "..."))
            self.lineEdit.setPlaceholderText(_translate("MainWindow", "Введите номер"))
            self.pushButton.setText(_translate("MainWindow", "Поиск"))
            self.pushButton.setShortcut(_translate("MainWindow", "Return"))
            self.pushButton1.setText(_translate("MainWindow", "Добавить"))
            self.pushButton2.setText(_translate("MainWindow", "Изменить"))
            self.pushButton3.setText(_translate("MainWindow", "Удалить"))
            self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Информация будет здесь"))
            self.tableWidget.setSortingEnabled(False)
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("MainWindow", "Номера"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("MainWindow", "Контакты"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("MainWindow", "Информация"))
            self.Info.setTitle(_translate("MainWindow", "Помощь"))
            self.Settings.setTitle(_translate("MainWindow", "Настройки"))
            self.Language.setTitle(_translate("MainWindow", "Языки"))
            self.Theme.setTitle(_translate("MainWindow", "Выбор темы"))
            self.actionAbout_programm.setText(_translate("MainWindow", "О программе"))
            self.actionAbout_programm.setShortcut(_translate("MainWindow", "F4", " "))
            self.actionHow_to_use_the_program.setText(_translate("MainWindow", "Как использовать программу?"))
            self.actionHow_to_use_the_program.setShortcut(_translate("MainWindow", "F1"))
            self.Translating.setText(_translate("MainWindow", "Перевод имен (при подключении к сети)"))
            self.Russian.setText(_translate("MainWindow", "Русский"))
            self.English.setText(_translate("MainWindow", "Английский"))
            self.Light.setText(_translate("MainWindow", "Светлая темя"))
            self.Dark.setText(_translate("MainWindow", "Темная тема"))
        elif self.config['language'] == 'en':
            _translate = QtCore.QCoreApplication.translate
            # MainWindow.setWindowTitle(_translate("MainWindow", f"Numti v{self.config['version']}"))
            self.comboBox.setItemText(0, _translate("MainWindow", "My Contacts"))
            self.comboBox.setItemText(1, _translate("MainWindow", "Edit contact list"))
            self.comboBox.setItemText(2, _translate("MainWindow", "Search by one number"))
            self.comboBox.setItemText(3, _translate("MainWindow", "Search from a text document (.txt)"))
            self.toolButton.setText(_translate("MainWindow", "..."))
            self.lineEdit.setPlaceholderText(_translate("MainWindow", "Enter number"))
            self.pushButton.setText(_translate("MainWindow", "Search"))
            self.pushButton.setShortcut(_translate("MainWindow", "Return"))
            self.pushButton1.setText(_translate("MainWindow", "Add"))
            self.pushButton2.setText(_translate("MainWindow", "Edit"))
            self.pushButton3.setText(_translate("MainWindow", "Delete"))
            self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Information will be here"))
            self.tableWidget.setSortingEnabled(False)
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("MainWindow", "Numbers"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("MainWindow", "Contacts"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("MainWindow", "Info"))
            self.Info.setTitle(_translate("MainWindow", "Help"))
            self.Settings.setTitle(_translate("MainWindow", "Settings"))
            self.Language.setTitle(_translate("MainWindow", "Languages"))
            self.Theme.setTitle(_translate("MainWindow", "Theme Selection"))
            self.actionAbout_programm.setText(_translate("MainWindow", "About the program"))
            self.actionAbout_programm.setShortcut(_translate("MainWindow", "F4", " "))
            self.actionHow_to_use_the_program.setText(_translate("MainWindow", "How to use the program?"))
            self.actionHow_to_use_the_program.setShortcut(_translate("MainWindow", "F1"))
            self.Translating.setText(_translate("MainWindow", "Name translation (when connected to the network)"))
            self.Russian.setText(_translate("MainWindow", "Russian"))
            self.English.setText(_translate("MainWindow", "English"))
            self.Light.setText(_translate("MainWindow", "Light theme"))
            self.Dark.setText(_translate("MainWindow", "Dark theme"))


# Точка входа теста (Test entry point)
if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
